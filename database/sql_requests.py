
TASK_TABLE = '''
--создание таблици сессии
create table if not exists tasks
(
    id          integer generated by default as identity
        constraint tasks_pk
            primary key,
    user_id     integer not null
        constraint tasks_users_id_fk
            references users,
    task_name   text,
    description text,
    status      boolean
);

alter table tasks
    owner to fp_db_admin;
'''

USER_TABLE = '''
--создание таблици профиля
create table if not exists users
(
    id            integer generated by default as identity
        constraint users_pk
            primary key,
    username      text not null,
    password_hash text
);

alter table users
    owner to fp_db_admin;
'''


CHER_USER = """
-- запрос получения сведений о пользователе
SELECT * FROM users WHERE users.username = $1
    """

CREATE_USER = """
-- запрос создания нового пользователя
INSERT INTO users (username, password_hash) VALUES ($1, $2) RETURNING id
    """

CTEATE_TASK = """
-- запрос создания задачи
INSERT INTO tasks (user_id, task_name, description, status) VALUES ($1, $2, $3, $4) RETURNING id
"""

GET_TASKS = """
-- запрос получения списка задач
SELECT * FROM tasks WHERE 
(user_id = $1 OR $1 IS NULL) AND
(status = $2 OR $2 IS NULL) AND
(id = $3 OR $3 IS NULL)
"""

UPDATE_TASK = """
-- запрос обновления задачи
UPDATE tasks SET 
task_name = CASE WHEN $1::varchar IS NOT NULL THEN $1 ELSE task_name END,
description =  CASE WHEN $2::varchar IS NOT NULL THEN $2 ELSE description END,
status = CASE WHEN $3::bool IS NOT NULL THEN $3 ELSE status END
WHERE user_id = $4 and id = $5 
RETURNING id
"""

DELETE_TASK = """
-- запрос удаления задачи
DELETE FROM tasks WHERE tasks.user_id = $1 and tasks.id = $2 RETURNING id
"""